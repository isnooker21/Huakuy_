# -*- coding: utf-8 -*-
"""
üéØ MT5 Simulator Runner
=======================
‡∏£‡∏±‡∏ô MT5 Simulator ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å

AUTHOR: Advanced Trading System
VERSION: 1.0.0 - Runner Edition
"""

import logging
import sys
import os
from datetime import datetime

# Add current directory to path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# Import modules from original system
from mt5_connection import MT5Connection
from order_management import OrderManager
from portfolio_manager import PortfolioManager
from trading_conditions import TradingConditions

# Import simulator
from mt5_simulator_gui import MT5SimulatorGUI
from mt5_simulator_integration import MT5SimulatorIntegration

logger = logging.getLogger(__name__)

def setup_logging():
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Logging"""
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.FileHandler('mt5_simulator.log', encoding='utf-8'),
            logging.StreamHandler()
        ]
    )

def create_trading_system():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡∏£‡∏î‡∏´‡∏•‡∏±‡∏Å"""
    try:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á MT5 Connection
        mt5_connection = MT5Connection()
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Order Manager
        order_manager = OrderManager(mt5_connection)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Portfolio Manager
        portfolio_manager = PortfolioManager(order_manager, 10000.0)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Trading Conditions
        trading_conditions = TradingConditions()
        
        logger.info("‚úÖ Trading system created successfully")
        return mt5_connection, order_manager, portfolio_manager, trading_conditions
        
    except Exception as e:
        logger.error(f"‚ùå Error creating trading system: {e}")
        return None, None, None, None

def create_simulator_with_system():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á Simulator ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡∏£‡∏î"""
    try:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡∏£‡∏î
        mt5_connection, order_manager, portfolio_manager, trading_conditions = create_trading_system()
        
        if not order_manager:
            logger.warning("‚ö†Ô∏è Could not create trading system, running in simulation mode")
            return None, None
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Simulator GUI
        simulator_gui = MT5SimulatorGUI()
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Integration
        integration = MT5SimulatorIntegration(simulator_gui, order_manager)
        
        # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
        simulator_gui.integration = integration
        simulator_gui.order_manager = order_manager
        simulator_gui.mt5_connection = mt5_connection
        
        logger.info("‚úÖ Simulator with trading system created successfully")
        return simulator_gui, integration
        
    except Exception as e:
        logger.error(f"‚ùå Error creating simulator with system: {e}")
        return None, None

def run_simulator():
    """‡∏£‡∏±‡∏ô Simulator"""
    try:
        logger.info("üéØ Starting MT5 Simulator...")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Simulator
        simulator_gui, integration = create_simulator_with_system()
        
        if not simulator_gui:
            logger.error("‚ùå Failed to create simulator")
            return
        
        # ‡πÄ‡∏£‡∏¥‡πà‡∏° Integration
        if integration:
            integration.start_integration()
            logger.info("‚úÖ Integration started")
        
        # ‡∏£‡∏±‡∏ô Simulator
        logger.info("‚úÖ Simulator GUI started")
        simulator_gui.run()
        
        # ‡∏´‡∏¢‡∏∏‡∏î Integration
        if integration:
            integration.stop_integration()
            logger.info("‚úÖ Integration stopped")
        
        logger.info("üéØ MT5 Simulator stopped")
        
    except KeyboardInterrupt:
        logger.info("üéØ Simulator stopped by user")
    except Exception as e:
        logger.error(f"‚ùå Error running simulator: {e}")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    try:
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Logging
        setup_logging()
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        print("=" * 60)
        print("üéØ MT5 Trading Simulator")
        print("=" * 60)
        print(f"üìÖ Start Time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print("üìä Features:")
        print("   ‚Ä¢ Real-time Price Chart")
        print("   ‚Ä¢ Live Position Tracking")
        print("   ‚Ä¢ Visual Trade Markers")
        print("   ‚Ä¢ Trading Statistics")
        print("   ‚Ä¢ Manual Trading Controls")
        print("=" * 60)
        
        # ‡∏£‡∏±‡∏ô Simulator
        run_simulator()
        
    except Exception as e:
        logger.error(f"‚ùå Error in main: {e}")
        print(f"‚ùå Error: {e}")

if __name__ == "__main__":
    main()
