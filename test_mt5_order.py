#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á Order MT5 ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
"""

try:
    import MetaTrader5 as mt5
    print("‚úÖ Import MetaTrader5 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
except ImportError:
    print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö MetaTrader5 module")
    print("   ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢: pip install MetaTrader5")
    exit(1)

def main():
    print("üöÄ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á Order MT5")
    print("=" * 40)
    
    # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MT5
    if not mt5.initialize():
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MT5 ‡πÑ‡∏î‡πâ")
        return
    
    print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MT5 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    
    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
    account = mt5.account_info()
    if account:
        print(f"üìä Account: {account.login}, Balance: {account.balance}")
        print(f"üîÑ Trade Allowed: {account.trade_allowed}")
    
    # ‡∏´‡∏≤ Symbol ‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥
    symbols = ["XAUUSD", "XAUUSD.v", "GOLD", "XAU/USD"]
    test_symbol = None
    
    for symbol in symbols:
        info = mt5.symbol_info(symbol)
        if info:
            test_symbol = symbol
            print(f"‚úÖ ‡∏û‡∏ö Symbol: {symbol}")
            print(f"   Bid: {info.bid}, Ask: {info.ask}")
            print(f"   Volume Min: {info.volume_min}")
            print(f"   Volume Step: {info.volume_step}")
            print(f"   Trade Mode: {info.trade_mode}")
            break
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö: {symbol}")
    
    if not test_symbol:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Symbol ‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥")
        mt5.shutdown()
        return
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á Order ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    symbol_info = mt5.symbol_info(test_symbol)
    
    # Request ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
    request = {
        "action": mt5.TRADE_ACTION_DEAL,
        "symbol": test_symbol,
        "volume": symbol_info.volume_min,
        "type": mt5.ORDER_TYPE_BUY,
        "price": symbol_info.ask,
        "magic": 123456,
        "comment": "Test Order",
    }
    
    print(f"\nüöÄ ‡∏™‡πà‡∏á Order: {test_symbol}")
    print(f"   Volume: {request['volume']}")
    print(f"   Price: {request['price']}")
    
    result = mt5.order_send(request)
    
    if result is None:
        print("‚ùå order_send() ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô None")
    else:
        print(f"üìã Result: RetCode={result.retcode}")
        if result.retcode == 10009:
            print(f"‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Deal: {result.deal}")
            
            # ‡∏•‡∏≠‡∏á‡∏õ‡∏¥‡∏î Order
            print("\n‚è≥ ‡∏£‡∏≠ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏≤ Position ‡∏à‡∏£‡∏¥‡∏á‡πÜ...")
            import time
            time.sleep(2)
            
            # ‡∏´‡∏≤ Position ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
            positions = mt5.positions_get(symbol=test_symbol)
            if positions:
                pos = positions[0]  # ‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å
                print(f"üìä ‡∏û‡∏ö Position: Ticket={pos.ticket}, Volume={pos.volume}")
                
                close_request = {
                    "action": mt5.TRADE_ACTION_DEAL,
                    "symbol": test_symbol,
                    "volume": pos.volume,
                    "type": mt5.ORDER_TYPE_SELL,
                    "position": pos.ticket,  # ‡πÉ‡∏ä‡πâ ticket ‡∏Ç‡∏≠‡∏á position
                    "price": symbol_info.bid,
                    "magic": 123456,
                    "comment": "Close Test",
                }
                
                print(f"üîÑ ‡∏õ‡∏¥‡∏î Position: {pos.ticket}")
                close_result = mt5.order_send(close_request)
                
                if close_result and close_result.retcode == 10009:
                    print("‚úÖ ‡∏õ‡∏¥‡∏î Order ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏£‡∏¥‡∏á‡πÜ!")
                else:
                    print(f"‚ùå ‡∏õ‡∏¥‡∏î Order ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {close_result.retcode if close_result else 'None'}")
                    if close_result:
                        print(f"   Deal: {close_result.deal}, Order: {close_result.order}")
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Position ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: RetCode {result.retcode}")
    
    mt5.shutdown()
    print("\nüèÅ ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö")

if __name__ == "__main__":
    main()
